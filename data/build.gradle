plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        buildConfigField "String", "STAR_WARS_API_BASE_URL", project.property('STAR_WARS_API_BASE_URL')
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    // Arch layers
    implementation project(":domain")

    // Gson
    implementation "com.google.code.gson:gson:$gson"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_android"
    kapt "androidx.hilt:hilt-compiler:$hilt_compiler"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_android_compiler"

    // Android
    implementation "androidx.core:core-ktx:$core_ktx"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$retrofit_coroutines"

    // OkHttp
    // Set as 'api' in order to let app module access to it and dagger can have visibility
    api "com.squareup.okhttp3:okhttp:$okhttp3"
    api "com.squareup.okhttp3:okhttp-urlconnection:$okhttp3"
    api "com.squareup.okhttp3:logging-interceptor:$okhttp3"

    // Testing
    testImplementation "junit:junit:$unit_junit"
    androidTestImplementation "androidx.test.ext:$instrumental_junit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$instrumental_espresso_core"
}
